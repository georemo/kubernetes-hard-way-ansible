---
- name: create worker certificate directory
  file:
    path: "{{ item.path }}"
    state: directory
  with_items:
    - { path: '{{ kubernetes.certificate.directory }}/certificates/kube-proxy'}
    - { path: '{{ kubernetes.certificate.directory }}/certificates/kubelet'}

- name: copy ca-config & kube-proxy csr
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'ca-config.json.j2', dest: '{{ kubernetes.certificate.directory }}/templates/ca-config.json' }
    - { src: 'kube-proxy-csr.json.j2', dest: '{{ kubernetes.certificate.directory }}/templates/kube-proxy-csr.json' }

- name: copy master certificate
  template:
    src: "master-csr.json.j2"
    dest: "{{ kubernetes.certificate.directory }}/templates/{{ item }}-csr.json"
  with_items: "{{ groups['master'] }}"

- name: copy worker certificate
  template:
    src: "worker-csr.json.j2"
    dest: "{{ kubernetes.certificate.directory }}/templates/{{ item }}-csr.json"
  with_items: "{{ groups['worker'] }}"

- name: generate kube-proxy certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}/certificates/kube-proxy"
  shell: |
    cfssl gencert \
    -ca={{ kubernetes.certificate.directory }}/intermediates/kubernetes-ca/kubernetes-ca.pem \
    -ca-key={{ kubernetes.certificate.directory }}/intermediates/kubernetes-ca/kubernetes-ca-key.pem \
    -config={{ kubernetes.certificate.directory }}/templates/ca-config.json \
    -profile=client-server \
    {{ kubernetes.certificate.directory }}/templates/kube-proxy-csr.json | cfssljson -bare kube-proxy

- name: generate kubelet master certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}/certificates/kubelet"
  shell: |
    cfssl gencert \
    -ca={{ kubernetes.certificate.directory }}/intermediates/kubernetes-ca/kubernetes-ca.pem \
    -ca-key={{ kubernetes.certificate.directory }}/intermediates/kubernetes-ca/kubernetes-ca-key.pem \
    -config={{ kubernetes.certificate.directory }}/templates/ca-config.json \
    -hostname={{ item }} \
    -profile=client-server \
    {{ kubernetes.certificate.directory }}/templates/{{ item }}-csr.json | cfssljson -bare {{ item }}
  with_items: "{{ groups['master'] }}"

- name: generate kubelet worker certificate
  args:
    chdir: "{{ kubernetes.certificate.directory }}/certificates/kubelet"
  shell: |
    cfssl gencert \
    -ca={{ kubernetes.certificate.directory }}/intermediates/kubernetes-ca/kubernetes-ca.pem \
    -ca-key={{ kubernetes.certificate.directory }}/intermediates/kubernetes-ca/kubernetes-ca-key.pem \
    -config={{ kubernetes.certificate.directory }}/templates/ca-config.json \
    -hostname={{ item }} \
    -profile=client-server \
    {{ kubernetes.certificate.directory }}/templates/{{ item }}-csr.json | cfssljson -bare {{ item }}
  with_items: "{{ groups['worker'] }}"

- name: copy cert into master node
  vars:
    master_ip: "{{ groups['master'] | join(' ') }}"
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    for instance in {{ master_ip }}; do
       sshpass -f ~/p scp {{ kubernetes.certificate.directory }}/certificates/kubelet/${instance}-key.pem {{ user }}@${instance}:~/
       sshpass -f ~/p scp {{ kubernetes.certificate.directory }}/certificates/kubelet/${instance}.pem {{ user }}@${instance}:~/
    done

- name: copy cert into worker node
  vars:
    worker_ip: "{{ groups['worker'] | join(' ') }}"
  args:
    chdir: "{{ kubernetes.certificate.directory }}"
  shell: |
    for instance in {{ worker_ip }}; do
       sshpass -f ~/p scp {{ kubernetes.certificate.directory }}/certificates/kubelet/${instance}-key.pem {{ user }}@${instance}:~/
       sshpass -f ~/p scp {{ kubernetes.certificate.directory }}/certificates/kubelet/${instance}.pem {{ user }}@${instance}:~/
    done


